{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nvar initialState = {\n  counterValue: 0\n};\nvar counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    setCounter: function setCounter(state, action) {\n      state.counterValue = action.payload;\n    }\n  }\n});\nexport var selectCounter = function selectCounter(state) {\n  return state.counter.counterValue;\n};\nvar setCounter = counterSlice.actions.setCounter;\nexport { setCounter };\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","counterValue","counterSlice","name","reducers","setCounter","state","action","payload","selectCounter","counter","actions","reducer"],"sources":["C:/Users/user/Desktop/app-wk9/src/redux/counterSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\n\r\n// Part1: Define Slice (including reducers and actions)\r\nconst initialState = { counterValue: 0 };\r\n\r\nconst counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    setCounter: (state, action) => {\r\n      state.counterValue = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// export state to global\r\nexport const selectCounter = (state) => state.counter.counterValue;\r\n\r\n// export actions to global\r\nexport const { setCounter } = counterSlice.actions;\r\n\r\n// export reducer to global\r\nexport default counterSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAIA,IAAMC,YAAY,GAAG;EAAEC,YAAY,EAAE;AAAhB,CAArB;AAEA,IAAMC,YAAY,GAAGH,WAAW,CAAC;EAC/BI,IAAI,EAAE,SADyB;EAE/BH,YAAY,EAAZA,YAF+B;EAG/BI,QAAQ,EAAE;IACRC,UAAU,EAAE,oBAACC,KAAD,EAAQC,MAAR,EAAmB;MAC7BD,KAAK,CAACL,YAAN,GAAqBM,MAAM,CAACC,OAA5B;IACD;EAHO;AAHqB,CAAD,CAAhC;AAWA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACH,KAAD;EAAA,OAAWA,KAAK,CAACI,OAAN,CAAcT,YAAzB;AAAA,CAAtB;AAGA,IAAQI,UAAR,GAAuBH,YAAY,CAACS,OAApC,CAAQN,UAAR;;AAGP,eAAeH,YAAY,CAACU,OAA5B"},"metadata":{},"sourceType":"module"}