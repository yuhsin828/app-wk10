{"ast":null,"code":"import { NativeBaseProvider, Center, HStack, Button, Text } from \"native-base\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { increaseOne } from \"../redux/counterSlice\";\nimport { decreaseOne } from \"../redux/counterSlice\";\nimport { selectCounter } from \"../redux/counterSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar HomeScreen = function HomeScreen() {\n  var counterValue = useSelector(selectCounter);\n  var dispatch = useDispatch();\n  return _jsx(NativeBaseProvider, {\n    children: _jsxs(Center, {\n      flex: 1,\n      bg: \"white\",\n      children: [_jsxs(HStack, {\n        space: 20,\n        children: [_jsx(Button, {\n          borderRadius: 0,\n          width: 70,\n          onPress: function onPress() {\n            return dispatch(increaseOne(counterValue + 1));\n          },\n          children: _jsx(Text, {\n            fontSize: 40,\n            color: \"white\",\n            children: \"+\"\n          })\n        }), _jsx(Button, {\n          borderRadius: 0,\n          width: 70,\n          onPress: function onPress() {\n            return dispatch(decreaseOne(counterValue - 1));\n          },\n          children: _jsx(Text, {\n            fontSize: 40,\n            color: \"white\",\n            children: \"-\"\n          })\n        })]\n      }), _jsx(Text, {\n        fontSize: 40,\n        mt: 20,\n        color: \"black\",\n        children: counterValue\n      })]\n    })\n  });\n};\n\nexport default HomeScreen;","map":{"version":3,"names":["NativeBaseProvider","Center","HStack","Button","Text","useDispatch","useSelector","increaseOne","decreaseOne","selectCounter","HomeScreen","counterValue","dispatch"],"sources":["C:/Users/user/Desktop/app-wk9/src/screens/HomeScreen.js"],"sourcesContent":["import { NativeBaseProvider, Center, HStack, Button, Text } from \"native-base\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { increaseOne } from \"../redux/counterSlice\";\r\nimport { decreaseOne } from \"../redux/counterSlice\";\r\nimport { selectCounter } from \"../redux/counterSlice\";\r\n\r\n// Then, you can use the redux state management:\r\n// get states by useSelector\r\n// send actions by useDispatch\r\nconst HomeScreen = () => {\r\n   // Get states from store\r\n   const counterValue = useSelector(selectCounter);\r\n \r\n   // Define a dispatch to send actions\r\n   const dispatch = useDispatch();\r\n \r\n   return (\r\n     <NativeBaseProvider>\r\n       <Center flex={1} bg={\"white\"}>\r\n         <HStack space={20}>\r\n           <Button borderRadius={0} width={70} onPress={() => dispatch(increaseOne(counterValue + 1))}>\r\n             <Text fontSize={40} color=\"white\">+</Text>\r\n           </Button>\r\n           <Button borderRadius={0} width={70} onPress={() => dispatch(decreaseOne(counterValue - 1))}>\r\n             <Text fontSize={40} color=\"white\">-</Text>\r\n           </Button>\r\n         </HStack>\r\n         <Text fontSize={40} mt={20} color={\"black\"}>\r\n           {counterValue}\r\n         </Text>\r\n       </Center>\r\n     </NativeBaseProvider>\r\n   );\r\n }\r\n\r\n export default HomeScreen;"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,MAA7B,EAAqCC,MAArC,EAA6CC,MAA7C,EAAqDC,IAArD,QAAiE,aAAjE;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT;AACA,SAASC,WAAT;AACA,SAASC,aAAT;;;;AAKA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;EAEtB,IAAMC,YAAY,GAAGL,WAAW,CAACG,aAAD,CAAhC;EAGA,IAAMG,QAAQ,GAAGP,WAAW,EAA5B;EAEA,OACE,KAAC,kBAAD;IAAA,UACE,MAAC,MAAD;MAAQ,IAAI,EAAE,CAAd;MAAiB,EAAE,EAAE,OAArB;MAAA,WACE,MAAC,MAAD;QAAQ,KAAK,EAAE,EAAf;QAAA,WACE,KAAC,MAAD;UAAQ,YAAY,EAAE,CAAtB;UAAyB,KAAK,EAAE,EAAhC;UAAoC,OAAO,EAAE;YAAA,OAAMO,QAAQ,CAACL,WAAW,CAACI,YAAY,GAAG,CAAhB,CAAZ,CAAd;UAAA,CAA7C;UAAA,UACE,KAAC,IAAD;YAAM,QAAQ,EAAE,EAAhB;YAAoB,KAAK,EAAC,OAA1B;YAAA;UAAA;QADF,EADF,EAIE,KAAC,MAAD;UAAQ,YAAY,EAAE,CAAtB;UAAyB,KAAK,EAAE,EAAhC;UAAoC,OAAO,EAAE;YAAA,OAAMC,QAAQ,CAACJ,WAAW,CAACG,YAAY,GAAG,CAAhB,CAAZ,CAAd;UAAA,CAA7C;UAAA,UACE,KAAC,IAAD;YAAM,QAAQ,EAAE,EAAhB;YAAoB,KAAK,EAAC,OAA1B;YAAA;UAAA;QADF,EAJF;MAAA,EADF,EASE,KAAC,IAAD;QAAM,QAAQ,EAAE,EAAhB;QAAoB,EAAE,EAAE,EAAxB;QAA4B,KAAK,EAAE,OAAnC;QAAA,UACGA;MADH,EATF;IAAA;EADF,EADF;AAiBD,CAxBF;;AA0BC,eAAeD,UAAf"},"metadata":{},"sourceType":"module"}